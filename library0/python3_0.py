import os
from matplotlib import pyplot as plt
print("Если вы прочитали весь текст нажимайте ENTER")

print("Переменная это именнованная ячейка памяти которая ссылается на ячейку памяти")

x = input("1. Питон это высоко уровневый язак програмирования,"
      "2. Он является интопритированным языком,"
      "3. Так-же Python имеет динамическую типизацию")

def clearShell():
    import os
    os.system(['clear', 'cls'][os.name == os.sys.platform])
clearShell()  # Очистка терминала

print("""\t \t 1.
Высоко уровний язык, это озночает что непосредственно Python обращается не на прямую к железу,
а через интропритатор языка Python""")

print("""\t \t 2.
Интопритированный язык, это то что кад написанный на языке, который является интропритированным
и воспроизводится не посредственно через другую программу.
Это значит что код читается программой по строчно и переводит его в байт код, понятном
компьютору языку, его можно представить словно это переводчик языка для человека с английского
и на понятный на нам язык""")

input("""\t \t 3.
Динамическая тепизация которая имет два вида.
Первый вид это статический который не требуе явного определения, к какому типу относится переменнная.
За счет этого падает скорость обработки кода, но в написании кода, меньше уходит строк""")

clearShell()  # Очистка терминала

def memo():
    print("""О чем важно помнить'
    при написании программ
    Python3 различает регистр символов, поэтому очень важно использовать правильный
    регистр; в противном случае ваш код работать не будет.
    Текстовые значения должны заключаться в кавычки (" или ' ), но
    с числами этого делать не нужно.
    При выборе имен переменных (то есть ячеек памяти, в которых
    вы хотите хранить данные) нельзя использовать специальные
    слова (print, input и т. д.), иначе ваш код работать не будет.
    При сохранении файлов не используйте в качестве их имен
    зарезервированные слова, уже используемые Python (print,
    input и т. д.) В противном случае программа работать не будет,
    и вам придется переименовать файл.
    17\n""")
    input("""При прочтении документации нажимай ENTER""")

    clearShell()#Очистка терминала

    komments = print("""\tЕсть такая функцыя как коментарий.
    Это означает что коментарий в програмировании воспроизводится компелятором
    не будет, это всего лишь подскаска для человека либо-же для полного описания
    тех или иных действий.
    Коментарии в языке PYthon имеют несколько видов.
    \t 1
    Однострочный коментарий, это знак решотки # который следует применять
    сразу-же после строки кода. В этом случаи коментарий состоит приблезительно
    до 5_ти слов.
    \t2
    Коментарий для несколькох строк имеет три двойных кавычек в начале и в
    конце " " "Здесь пишется текст" " " только без пробело. Можно и одинарные,
    но если вам понадобится кавычки в коментариях тогда прийдется переписовать
    ковычки, так-как в двойных кавычках можно поставить лишь одинарные ковычки
    'Вот они'""")

    input("""\tПримеры кода\n
    Синтаксис языка Python очень прост,
    a = 5
          цыфры 2 и 5 это данные и этих типов данных несколько
    b = 2
    print(a + b)
    \t \t \t принт выводит результат кода
    Значение, хранящееся в переменной, может
    изменяться во время выполнения про-
    граммы. Переменной можно присвоить
    практически любое имя (кроме заре-
    зервированных слов Python — print,
    save и т. д.); это имя должно начи-
    наться с буквы (но не с цифры или зна-
    ка) и не может содержать пробелов.
    P.S
    a и b-это переменная
    знак = это присваения переменной значения
    цыфры-это значения переменной""")

    clearShell()

    import os
    def arithmetik():
        img = plt.imread('/home/bsg/Desktop/shkola/Kurs_piton/library/Screenshot_20230324-213852.перевернут.png')
        plt.imshow(img)
        plt.show()


    arithmetik()

    data_tupe = input("""
    Типы данных – множество допустимых значений, которые могут принимать данные,
    принадлежащие к этому типу, то есть тип – это описание, данное значениям допустимых данных.
    Существует несколько видов типов данных языка Python\n
    Типы дынных это базавая структура языка и эти типы данных имеют два
    типа _изменяемые и не _изменяемые.""")

    clearShell()

    img = plt.imread('/home/bsg/Desktop/shkola/Kurs_piton/library/99770381_2.png')
    plt.imshow(img)
    plt.show()#Вывод фото на экоан

    question = input("Если все понял шагаем дальше Enter:")

    print("""Продолжим.
    Прочти за функцию 'input()'
    тебе советую больше читать нежели смотреть видео
    по изучению языка Python3""")

    clearShell()

    """документация python3"""
    # doc = input("Время от времени читай эту документацию, так как от этого зависит твои успехи в продвижении по изучению")
    # import webbrowser
    # webbrowser.get(using='firefox').open_new_tab("https://docs.python.org/uk/3/")# Открыть сылку

    def additions_strok():
        global additions
        additions = input("""\n В питоне есть отступы которые имеют либо 4 пробела либо 1 таб,
        это правила PEP-8""")
    additions_strok()

    clearShell()
    
    """арефметические значения"""
    def arithmetik():
        import os
        img = plt.imread('/home/bsg/Desktop/shkola/Kurs_piton/library/slide-5.jpg')
        plt.imshow(img)
        plt.show()
    arithmetik()

    def arithmetik():
        import os
        img = plt.imread('/home/bsg/Desktop/shkola/Kurs_piton/library/Screenshot_20230324-212710.перевернут.png')
        plt.imshow(img)
        plt.show()
    arithmetik()

memo()




